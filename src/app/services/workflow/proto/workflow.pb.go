// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/app/services/workflow/proto/workflow.proto

package ticket_svc_workflow

import (
	proto1 "app/common/proto"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkflowConfiguration struct {
	Id                   uint32              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	MaxItems             uint32              `protobuf:"varint,3,opt,name=maxItems,proto3" json:"maxItems"`
	Order                uint32              `protobuf:"varint,4,opt,name=order,proto3" json:"order"`
	Allow                []uint32            `protobuf:"varint,5,rep,packed,name=allow,proto3" json:"allow"`
	Status               proto1.TicketStatus `protobuf:"varint,6,opt,name=status,proto3,enum=ticket.common.TicketStatus" json:"status"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WorkflowConfiguration) Reset()         { *m = WorkflowConfiguration{} }
func (m *WorkflowConfiguration) String() string { return proto.CompactTextString(m) }
func (*WorkflowConfiguration) ProtoMessage()    {}
func (*WorkflowConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6274b4035c0fdc1, []int{0}
}

func (m *WorkflowConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowConfiguration.Unmarshal(m, b)
}
func (m *WorkflowConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowConfiguration.Marshal(b, m, deterministic)
}
func (m *WorkflowConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowConfiguration.Merge(m, src)
}
func (m *WorkflowConfiguration) XXX_Size() int {
	return xxx_messageInfo_WorkflowConfiguration.Size(m)
}
func (m *WorkflowConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowConfiguration proto.InternalMessageInfo

func (m *WorkflowConfiguration) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WorkflowConfiguration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowConfiguration) GetMaxItems() uint32 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

func (m *WorkflowConfiguration) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *WorkflowConfiguration) GetAllow() []uint32 {
	if m != nil {
		return m.Allow
	}
	return nil
}

func (m *WorkflowConfiguration) GetStatus() proto1.TicketStatus {
	if m != nil {
		return m.Status
	}
	return proto1.TicketStatus_Open
}

type WorkflowId struct {
	WorkflowId           int32    `protobuf:"varint,1,opt,name=workflowId,proto3" json:"workflowId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowId) Reset()         { *m = WorkflowId{} }
func (m *WorkflowId) String() string { return proto.CompactTextString(m) }
func (*WorkflowId) ProtoMessage()    {}
func (*WorkflowId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6274b4035c0fdc1, []int{1}
}

func (m *WorkflowId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowId.Unmarshal(m, b)
}
func (m *WorkflowId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowId.Marshal(b, m, deterministic)
}
func (m *WorkflowId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowId.Merge(m, src)
}
func (m *WorkflowId) XXX_Size() int {
	return xxx_messageInfo_WorkflowId.Size(m)
}
func (m *WorkflowId) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowId.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowId proto.InternalMessageInfo

func (m *WorkflowId) GetWorkflowId() int32 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type WorkflowConfigurations struct {
	Workflows            []*WorkflowConfiguration `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows"`
	Error                *proto1.Error            `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WorkflowConfigurations) Reset()         { *m = WorkflowConfigurations{} }
func (m *WorkflowConfigurations) String() string { return proto.CompactTextString(m) }
func (*WorkflowConfigurations) ProtoMessage()    {}
func (*WorkflowConfigurations) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6274b4035c0fdc1, []int{2}
}

func (m *WorkflowConfigurations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowConfigurations.Unmarshal(m, b)
}
func (m *WorkflowConfigurations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowConfigurations.Marshal(b, m, deterministic)
}
func (m *WorkflowConfigurations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowConfigurations.Merge(m, src)
}
func (m *WorkflowConfigurations) XXX_Size() int {
	return xxx_messageInfo_WorkflowConfigurations.Size(m)
}
func (m *WorkflowConfigurations) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowConfigurations.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowConfigurations proto.InternalMessageInfo

func (m *WorkflowConfigurations) GetWorkflows() []*WorkflowConfiguration {
	if m != nil {
		return m.Workflows
	}
	return nil
}

func (m *WorkflowConfigurations) GetError() *proto1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type WorkflowConfigurationResponse struct {
	Workflow             *WorkflowConfiguration `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow"`
	Error                *proto1.Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WorkflowConfigurationResponse) Reset()         { *m = WorkflowConfigurationResponse{} }
func (m *WorkflowConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*WorkflowConfigurationResponse) ProtoMessage()    {}
func (*WorkflowConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6274b4035c0fdc1, []int{3}
}

func (m *WorkflowConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowConfigurationResponse.Unmarshal(m, b)
}
func (m *WorkflowConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *WorkflowConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowConfigurationResponse.Merge(m, src)
}
func (m *WorkflowConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_WorkflowConfigurationResponse.Size(m)
}
func (m *WorkflowConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowConfigurationResponse proto.InternalMessageInfo

func (m *WorkflowConfigurationResponse) GetWorkflow() *WorkflowConfiguration {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func (m *WorkflowConfigurationResponse) GetError() *proto1.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type InitialColumn struct {
	WorkflowId           int32    `protobuf:"varint,1,opt,name=workflowId,proto3" json:"workflowId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitialColumn) Reset()         { *m = InitialColumn{} }
func (m *InitialColumn) String() string { return proto.CompactTextString(m) }
func (*InitialColumn) ProtoMessage()    {}
func (*InitialColumn) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6274b4035c0fdc1, []int{4}
}

func (m *InitialColumn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitialColumn.Unmarshal(m, b)
}
func (m *InitialColumn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitialColumn.Marshal(b, m, deterministic)
}
func (m *InitialColumn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitialColumn.Merge(m, src)
}
func (m *InitialColumn) XXX_Size() int {
	return xxx_messageInfo_InitialColumn.Size(m)
}
func (m *InitialColumn) XXX_DiscardUnknown() {
	xxx_messageInfo_InitialColumn.DiscardUnknown(m)
}

var xxx_messageInfo_InitialColumn proto.InternalMessageInfo

func (m *InitialColumn) GetWorkflowId() int32 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

func init() {
	proto.RegisterType((*WorkflowConfiguration)(nil), "ticket.svc.workflow.WorkflowConfiguration")
	proto.RegisterType((*WorkflowId)(nil), "ticket.svc.workflow.WorkflowId")
	proto.RegisterType((*WorkflowConfigurations)(nil), "ticket.svc.workflow.WorkflowConfigurations")
	proto.RegisterType((*WorkflowConfigurationResponse)(nil), "ticket.svc.workflow.WorkflowConfigurationResponse")
	proto.RegisterType((*InitialColumn)(nil), "ticket.svc.workflow.InitialColumn")
}

func init() {
	proto.RegisterFile("src/app/services/workflow/proto/workflow.proto", fileDescriptor_f6274b4035c0fdc1)
}

var fileDescriptor_f6274b4035c0fdc1 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xd5, 0xe6, 0xc3, 0x4a, 0xa7, 0xb4, 0x42, 0x43, 0x41, 0x56, 0x10, 0x60, 0xf9, 0x14, 0x15,
	0x64, 0x4b, 0xee, 0x4f, 0x08, 0x34, 0x8d, 0x84, 0x84, 0x64, 0xbe, 0x4e, 0x1c, 0x16, 0x7b, 0x0a,
	0xab, 0xda, 0xbb, 0xd6, 0xee, 0xa6, 0x86, 0x3f, 0xc1, 0x85, 0x33, 0xff, 0x83, 0x9f, 0x87, 0xb2,
	0xb1, 0x0d, 0x2d, 0x16, 0xd4, 0x1c, 0xb8, 0xe5, 0xcd, 0xbc, 0x37, 0xf3, 0xe6, 0xc5, 0x36, 0x44,
	0x46, 0x67, 0x31, 0xaf, 0xaa, 0xd8, 0x90, 0xbe, 0x14, 0x19, 0x99, 0xb8, 0x56, 0xfa, 0xe2, 0xbc,
	0x50, 0x75, 0x5c, 0x69, 0x65, 0x55, 0x07, 0x23, 0x07, 0xf1, 0x8e, 0x15, 0xd9, 0x05, 0xd9, 0xc8,
	0x5c, 0x66, 0x51, 0xdb, 0x9a, 0xdf, 0xca, 0x54, 0x59, 0x2a, 0xb9, 0xa3, 0x84, 0xdf, 0x19, 0xdc,
	0x7d, 0xdb, 0xb4, 0x96, 0x4a, 0x9e, 0x8b, 0x0f, 0x1b, 0xcd, 0xad, 0x50, 0x12, 0x0f, 0x61, 0x24,
	0x72, 0x9f, 0x05, 0x6c, 0x71, 0x90, 0x8e, 0x44, 0x8e, 0x08, 0x13, 0xc9, 0x4b, 0xf2, 0x47, 0x01,
	0x5b, 0xec, 0xa5, 0xee, 0x37, 0xce, 0x61, 0x56, 0xf2, 0x4f, 0x6b, 0x4b, 0xa5, 0xf1, 0xc7, 0x8e,
	0xd9, 0x61, 0x3c, 0x82, 0xa9, 0xd2, 0x39, 0x69, 0x7f, 0xe2, 0x1a, 0x3b, 0xb0, 0xad, 0xf2, 0xa2,
	0x50, 0xb5, 0x3f, 0x0d, 0xc6, 0xdb, 0xaa, 0x03, 0x78, 0x02, 0x9e, 0xb1, 0xdc, 0x6e, 0x8c, 0xef,
	0x05, 0x6c, 0x71, 0x98, 0xdc, 0x8f, 0x1a, 0xe7, 0x8d, 0xd7, 0x57, 0x0e, 0xbd, 0x74, 0x94, 0xb4,
	0xa1, 0x86, 0x4f, 0x00, 0x5a, 0xe7, 0xeb, 0x1c, 0x1f, 0x02, 0xd4, 0x1d, 0x72, 0xb6, 0xa7, 0xe9,
	0x2f, 0x95, 0xf0, 0x0b, 0x83, 0x7b, 0xbd, 0x87, 0x1a, 0x3c, 0x83, 0xbd, 0x96, 0x68, 0x7c, 0x16,
	0x8c, 0x17, 0xfb, 0xc9, 0x71, 0xd4, 0x13, 0x5d, 0xd4, 0xab, 0x4f, 0x7f, 0x8a, 0xf1, 0x18, 0xa6,
	0xa4, 0xb5, 0xd2, 0x2e, 0xa4, 0xfd, 0xe4, 0xe8, 0xda, 0x19, 0xcf, 0xb6, 0xbd, 0x74, 0x47, 0x09,
	0xbf, 0x32, 0x78, 0xd0, 0x3f, 0x90, 0x4c, 0xa5, 0xa4, 0x21, 0x3c, 0x85, 0x59, 0x3b, 0xda, 0x1d,
	0x34, 0xcc, 0x56, 0xa7, 0x1d, 0xe4, 0x2a, 0x86, 0x83, 0xb5, 0x14, 0x56, 0xf0, 0x62, 0xa9, 0x8a,
	0x4d, 0x29, 0xff, 0x96, 0x6b, 0xf2, 0x6d, 0x02, 0xb3, 0xd6, 0x00, 0x9e, 0xc1, 0x78, 0x45, 0x16,
	0x7f, 0xdb, 0x50, 0x56, 0xf6, 0xf3, 0xfc, 0xf1, 0xcd, 0xcd, 0x1b, 0x7c, 0x07, 0xde, 0x8a, 0xec,
	0x0b, 0x49, 0xf8, 0xe8, 0x8f, 0xb2, 0x75, 0x3e, 0x4f, 0x06, 0x84, 0xd2, 0x46, 0xfb, 0x11, 0xbc,
	0xa5, 0x26, 0x6e, 0x09, 0x07, 0x44, 0xfa, 0xaf, 0x9b, 0x5e, 0x57, 0xf9, 0xff, 0xd8, 0x74, 0x0a,
	0xde, 0x53, 0x2a, 0xc8, 0xde, 0x20, 0xb2, 0xeb, 0xef, 0xd7, 0x1b, 0x25, 0xf2, 0x6e, 0xce, 0x73,
	0xb8, 0xbd, 0x22, 0x7b, 0xf5, 0x29, 0xe8, 0xff, 0x47, 0xc3, 0xde, 0x3d, 0x57, 0x94, 0xef, 0x3d,
	0xf7, 0x9d, 0x39, 0xf9, 0x11, 0x00, 0x00, 0xff, 0xff, 0x39, 0x52, 0x82, 0xd3, 0xbc, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowClient is the client API for Workflow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowClient interface {
	Get(ctx context.Context, in *proto1.Empty, opts ...grpc.CallOption) (*WorkflowConfigurations, error)
	GetOne(ctx context.Context, in *WorkflowId, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error)
	Create(ctx context.Context, in *WorkflowConfiguration, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error)
	Update(ctx context.Context, in *WorkflowConfiguration, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error)
	Delete(ctx context.Context, in *WorkflowId, opts ...grpc.CallOption) (*proto1.VoidResponse, error)
	GetInitialColumn(ctx context.Context, in *proto1.Empty, opts ...grpc.CallOption) (*InitialColumn, error)
}

type workflowClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowClient(cc *grpc.ClientConn) WorkflowClient {
	return &workflowClient{cc}
}

func (c *workflowClient) Get(ctx context.Context, in *proto1.Empty, opts ...grpc.CallOption) (*WorkflowConfigurations, error) {
	out := new(WorkflowConfigurations)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowClient) GetOne(ctx context.Context, in *WorkflowId, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error) {
	out := new(WorkflowConfigurationResponse)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/GetOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowClient) Create(ctx context.Context, in *WorkflowConfiguration, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error) {
	out := new(WorkflowConfigurationResponse)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowClient) Update(ctx context.Context, in *WorkflowConfiguration, opts ...grpc.CallOption) (*WorkflowConfigurationResponse, error) {
	out := new(WorkflowConfigurationResponse)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowClient) Delete(ctx context.Context, in *WorkflowId, opts ...grpc.CallOption) (*proto1.VoidResponse, error) {
	out := new(proto1.VoidResponse)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowClient) GetInitialColumn(ctx context.Context, in *proto1.Empty, opts ...grpc.CallOption) (*InitialColumn, error) {
	out := new(InitialColumn)
	err := c.cc.Invoke(ctx, "/ticket.svc.workflow.Workflow/GetInitialColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowServer is the server API for Workflow service.
type WorkflowServer interface {
	Get(context.Context, *proto1.Empty) (*WorkflowConfigurations, error)
	GetOne(context.Context, *WorkflowId) (*WorkflowConfigurationResponse, error)
	Create(context.Context, *WorkflowConfiguration) (*WorkflowConfigurationResponse, error)
	Update(context.Context, *WorkflowConfiguration) (*WorkflowConfigurationResponse, error)
	Delete(context.Context, *WorkflowId) (*proto1.VoidResponse, error)
	GetInitialColumn(context.Context, *proto1.Empty) (*InitialColumn, error)
}

func RegisterWorkflowServer(s *grpc.Server, srv WorkflowServer) {
	s.RegisterService(&_Workflow_serviceDesc, srv)
}

func _Workflow_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).Get(ctx, req.(*proto1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workflow_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).GetOne(ctx, req.(*WorkflowId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workflow_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowConfiguration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).Create(ctx, req.(*WorkflowConfiguration))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workflow_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowConfiguration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).Update(ctx, req.(*WorkflowConfiguration))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workflow_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).Delete(ctx, req.(*WorkflowId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workflow_GetInitialColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServer).GetInitialColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.workflow.Workflow/GetInitialColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServer).GetInitialColumn(ctx, req.(*proto1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workflow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ticket.svc.workflow.Workflow",
	HandlerType: (*WorkflowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Workflow_Get_Handler,
		},
		{
			MethodName: "GetOne",
			Handler:    _Workflow_GetOne_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Workflow_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Workflow_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Workflow_Delete_Handler,
		},
		{
			MethodName: "GetInitialColumn",
			Handler:    _Workflow_GetInitialColumn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/app/services/workflow/proto/workflow.proto",
}
