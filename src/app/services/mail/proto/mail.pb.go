// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/app/services/mail/proto/mail.proto

package ticket_svc_mail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Envelope struct {
	To                   string            `protobuf:"bytes,1,opt,name=to,proto3" json:"to"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Template             string            `protobuf:"bytes,3,opt,name=template,proto3" json:"template"`
	Variables            map[string]string `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_af0369b974c9dec9, []int{0}
}

func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (m *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(m, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

func (m *Envelope) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Envelope) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Envelope) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Envelope) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type Stamp struct {
	Sent                 bool     `protobuf:"varint,1,opt,name=sent,proto3" json:"sent"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stamp) Reset()         { *m = Stamp{} }
func (m *Stamp) String() string { return proto.CompactTextString(m) }
func (*Stamp) ProtoMessage()    {}
func (*Stamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_af0369b974c9dec9, []int{1}
}

func (m *Stamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stamp.Unmarshal(m, b)
}
func (m *Stamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stamp.Marshal(b, m, deterministic)
}
func (m *Stamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stamp.Merge(m, src)
}
func (m *Stamp) XXX_Size() int {
	return xxx_messageInfo_Stamp.Size(m)
}
func (m *Stamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Stamp.DiscardUnknown(m)
}

var xxx_messageInfo_Stamp proto.InternalMessageInfo

func (m *Stamp) GetSent() bool {
	if m != nil {
		return m.Sent
	}
	return false
}

func init() {
	proto.RegisterType((*Envelope)(nil), "ticket.svc.mail.Envelope")
	proto.RegisterMapType((map[string]string)(nil), "ticket.svc.mail.Envelope.VariablesEntry")
	proto.RegisterType((*Stamp)(nil), "ticket.svc.mail.Stamp")
}

func init() {
	proto.RegisterFile("src/app/services/mail/proto/mail.proto", fileDescriptor_af0369b974c9dec9)
}

var fileDescriptor_af0369b974c9dec9 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0xe9, 0x9f, 0x95, 0xee, 0x08, 0xab, 0x0c, 0x22, 0xb5, 0x5e, 0x96, 0x3d, 0x48, 0x4f,
	0x29, 0xac, 0x17, 0x15, 0x2f, 0x1e, 0xd6, 0x9b, 0x20, 0x15, 0xbc, 0x67, 0xcb, 0x1c, 0xc2, 0xa6,
	0x4d, 0x48, 0xc6, 0xc0, 0xbe, 0xa5, 0x8f, 0x24, 0x8d, 0x56, 0x51, 0xd9, 0xdb, 0x37, 0xbf, 0xc9,
	0x64, 0x3e, 0x06, 0xae, 0xbc, 0xeb, 0x1a, 0x69, 0x6d, 0xe3, 0xc9, 0x05, 0xd5, 0x91, 0x6f, 0x7a,
	0xa9, 0x74, 0x63, 0x9d, 0x61, 0x13, 0x51, 0x44, 0xc4, 0x13, 0x56, 0xdd, 0x8e, 0x58, 0xf8, 0xd0,
	0x89, 0x31, 0x5e, 0xbd, 0x27, 0x50, 0x6c, 0x86, 0x40, 0xda, 0x58, 0xc2, 0x05, 0xa4, 0x6c, 0xca,
	0x64, 0x99, 0xd4, 0xf3, 0x36, 0x65, 0x83, 0x08, 0xf9, 0x20, 0x7b, 0x2a, 0xd3, 0x98, 0x44, 0xc6,
	0x0a, 0x0a, 0xa6, 0xde, 0x6a, 0xc9, 0x54, 0x66, 0x31, 0xff, 0xae, 0xf1, 0x11, 0xe6, 0x41, 0x3a,
	0x25, 0xb7, 0x9a, 0x7c, 0x99, 0x2f, 0xb3, 0xfa, 0x78, 0x5d, 0x8b, 0x3f, 0x1b, 0xc5, 0xb4, 0x4d,
	0xbc, 0x4e, 0x4f, 0x37, 0x03, 0xbb, 0x7d, 0xfb, 0x33, 0x5a, 0xdd, 0xc3, 0xe2, 0x77, 0x13, 0x4f,
	0x21, 0xdb, 0xd1, 0xfe, 0x4b, 0x6d, 0x44, 0x3c, 0x83, 0x59, 0x90, 0xfa, 0x6d, 0x92, 0xfb, 0x2c,
	0xee, 0xd2, 0x9b, 0x64, 0x75, 0x09, 0xb3, 0x17, 0x96, 0xbd, 0x1d, 0xf5, 0x3d, 0x0d, 0x1c, 0xa7,
	0x8a, 0x36, 0xf2, 0xfa, 0x01, 0xf2, 0x27, 0xa9, 0x34, 0xde, 0x42, 0xfe, 0x6c, 0x3c, 0xe3, 0xc5,
	0x41, 0xbf, 0xea, 0xfc, 0x5f, 0x2b, 0x7e, 0xbb, 0x3d, 0x8a, 0xa7, 0xbc, 0xfe, 0x08, 0x00, 0x00,
	0xff, 0xff, 0xb3, 0xed, 0x4e, 0xa0, 0x74, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MailClient is the client API for Mail service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailClient interface {
	Post(ctx context.Context, in *Envelope, opts ...grpc.CallOption) (*Stamp, error)
}

type mailClient struct {
	cc *grpc.ClientConn
}

func NewMailClient(cc *grpc.ClientConn) MailClient {
	return &mailClient{cc}
}

func (c *mailClient) Post(ctx context.Context, in *Envelope, opts ...grpc.CallOption) (*Stamp, error) {
	out := new(Stamp)
	err := c.cc.Invoke(ctx, "/ticket.svc.mail.Mail/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailServer is the server API for Mail service.
type MailServer interface {
	Post(context.Context, *Envelope) (*Stamp, error)
}

func RegisterMailServer(s *grpc.Server, srv MailServer) {
	s.RegisterService(&_Mail_serviceDesc, srv)
}

func _Mail_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Envelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ticket.svc.mail.Mail/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServer).Post(ctx, req.(*Envelope))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ticket.svc.mail.Mail",
	HandlerType: (*MailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Post",
			Handler:    _Mail_Post_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/app/services/mail/proto/mail.proto",
}
