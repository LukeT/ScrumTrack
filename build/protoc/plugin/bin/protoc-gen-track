#! /usr/bin/env node
const protocPlugin = require('protoc-plugin')

protocPlugin(protos => {
	const p =  protos.map(i => {
		const file = `// Code generated by protoc-gen-track. DO NOT EDIT.ss
// source: ${i.name}
package ${i.pb_package.replace(/\./g, '_')}

import (
	"app/common/service/interfaces"
	"google.golang.org/grpc"
)

var PackageName = "${i.pb_package}"

${i.serviceList.map(svc => (`
func Register${svc.name}Handler(svc interfaces.Svc, user ${svc.name}Server) {
	svc.RegisterService(func(svc interfaces.Svc, server *grpc.Server) {
		Register${svc.name}Server(server, user)
	})
}

func Get${svc.name}Client(svc interfaces.Svc) ${svc.name}Client {
	return New${svc.name}Client(svc.FindService("${i.pb_package}"))
}
`))}

`;

		return { name: `${i.name.replace(/proto$/, 'track.go')}`, content: file }
	});


	return p;
});
